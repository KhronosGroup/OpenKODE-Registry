<?xml version="1.0" encoding="us-ascii"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY nbsp "&#160;">
<!ENTITY ndash "&#8211;">
<!ENTITY mdash "&#8212;">
<!ENTITY rsquo "&#8217;">
<!ENTITY ldquo "&#8220;">
<!ENTITY rdquo "&#8221;">
]>
<?xml-stylesheet href="../style/tpr/browser.xsl" type="text/xsl"?>

<article>
  <title>OpenKODE Core extension: KD_ACR_secure_storage</title>

  <synopsis role="incfileonly">/* Sample KD/ACR_secure_storage.h for OpenKODE Core */
#ifndef __kd_ACR_secure_storage_h_
#define __kd_ACR_secure_storage_h_
#include &lt;KD/kd.h>

#ifdef __cplusplus
extern "C" {
#endif

</synopsis>
  <informaltable>
    <tgroup cols="2">

      <tbody>
        <row>
          <entry>Name</entry>
          <entry>ACR_secure_storage</entry>
        </row>
        <row>
          <entry>Name strings</entry>
          <entry>KD_ACR_secure_storage</entry>
        </row>
        <row>
          <entry>Contributors</entry>
          <entry>Hitoshi Ooyama, Acrodea</entry>
        </row>
        <row>
          <entry>Contacts</entry>
          <entry>Acrodea</entry>
        </row>
        <row>
          <entry>Status</entry>
          <entry>Draft</entry>
        </row>
        <row>
          <entry>Version</entry>
          <!--When you up this, remember to do an entry in the revision history.-->
          <entry>Version 1, 2011-02-18</entry>
        </row>
        <row>
          <entry>Number</entry>
          <entry>TBD</entry>
        </row>
        <row>
          <entry>Dependencies</entry>
          <entry>
            Requires OpenKODE Core 1.0 or later.
            This extension is written based on the wording of the
            OpenKODE Core 1.0 specification.
          </entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <sect1>
    <title>Overview</title>
    <para>
      This extension module enables to read in data in a protected area.
      Data in the protected area is encrypted by a key uniquely generated by device so that the data can't be transferred to any other devices.
      In addition, a hush value of a protected file is saved in a device, which prevents a previously backed-up file from operations such as overwriting, data restoration, etc. (Exceptionally, it is possible to overwrite a file after back-up as long as no changes have been made in the file.) 
    </para>
  </sect1>

  <sect1>
    <title>Header file</title>
    <para>
        When this extension is present, its facilities are accessed by
        including its header file:
    </para>
    <synopsis>#include &lt;KD/ACR_secure_storage.h></synopsis>
  </sect1>

<sect1>
  <title>New function</title>
<!--===================================================================-->
  <refentry id="kdSecureStorageSetValueACR">
    <refnamediv>
      <refname>kdSecureStorageSetValueACR</refname>
      <refpurpose>Write in data to a protected area.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
        <funcprototype>
          <funcdef>KDint <function>kdSecureStorageSetValueACR</function></funcdef>
          <paramdef>const KDchar *<parameter>key</parameter></paramdef>
          <paramdef>const KDchar *<parameter>data</parameter></paramdef>
          <paramdef>KDsize <parameter>size</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
    </refsynopsisdiv>


    <refsect1>
      <title>Description</title>
      <para>
        Write in a data to a protected area.
        It is possible to write in up to 1MByte by data, and memory of a specified volume is saved by atomic operation.
      </para>

    <refsect2>
      <title>Parameters</title>
      <variablelist role="parameters">
        <varlistentry>
          <term><parameter>key</parameter></term>
          <listitem>
            <para>
              Specify a pointer to a key (equivalent to a filename) of data to be saved.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>data</parameter></term>
          <listitem>
            <para>
              Specify a pointer of data to be save in a protected area.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <parameter>size</parameter>
          </term>
          <listitem>
            <para>
              Specify a length of an argument, data.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    </refsect1>

    <refsect1>
      <title>Return value</title>
      <para>
        Upon the normal termination, a size of a written in data is returned.
        Upon the abnormal termination, -1 is returned.  For details of the error, refer to <function>kdGetError</function>.
      </para>
    </refsect1>
  
    <refsect1>
      <title>Error codes</title>

      <variablelist>
        <varlistentry>
          <term><literal>KD_EIO</literal></term>
          <listitem>
            <para>
            An encryption error. Or, when the data is being written in a disk, it will occur if a low-level I/O error happens.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>KD_EINVAL</literal></term>
          <listitem>
            <para>
                key and data are NULL, size is over the limit value, or key is blank.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect1>
  
  </refentry>

<!--===================================================================-->
  <refentry id="kdSecureStorageGetValueACR">
    <refnamediv>
      <refname>kdSecureStorageGetValueACR</refname>
      <refpurpose>Read in data from the protected area.</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <title>Synopsis</title>
      <funcsynopsis>
        <funcprototype>
          <funcdef>KDint <function>kdSecureStorageGetValueACR</function></funcdef>
          <paramdef>const KDchar *<parameter>key</parameter></paramdef>
          <paramdef>KDchar *<parameter>buf</parameter></paramdef>
          <paramdef>KDsize <parameter>maxSize</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
    </refsynopsisdiv>


    <refsect1>
      <title>Description</title>
      <para>
        Read in data from the protected area.
        Read in all the written data.
      </para>

    <refsect2>
      <title>Parameters</title>
      <variablelist role="parameters">
        <varlistentry>
          <term><parameter>key</parameter></term>
          <listitem>
            <para>
              Specify a pointer to a key (equivalent to a filename) of data to be read in.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>buf</parameter></term>
          <listitem>
            <para>
              Specify a pointer to an area which stores the data read in from the protected area.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <parameter>maxSize</parameter>
          </term>
          <listitem>
            <para>
              Specify a data size secured for data storage area (buf).
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    </refsect1>

    <refsect1>
      <title>Return value</title>
      <para>
        Upon the normal termination, the size of read-in data is returned.
        If a key is not present, 0 is returned as the size of read-in data.
        Upon the abnormal termination, -1 is returned.  For details of the error, refer to <function>kdGetError</function>.
      </para>
    </refsect1>
  
    <refsect1>
      <title>Error codes</title>

      <variablelist>
        <varlistentry>
          <term><literal>KD_EIO</literal></term>
          <listitem>
            <para>
            An encryption error. Or, when the data is being written in a disk, it will occur if a low-level I/O error happens.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>KD_EINVAL</literal></term>
          <listitem>
            <para>
                key and buf are NULL, maxsize is over the limit value, or  key is blank.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect1>
  
  </refentry>

</sect1>
<sect1>
  <title>Revision history</title>

  <sect2>
    <title>Version 1, 2011-02-18</title>
    <para>
        Initial version.
    </para>
  </sect2>
</sect1>

  <sect1 role="incfileonly">
    <title>Dummy sect for include file epilog</title>
    <synopsis role="incfileonly">
#ifdef __cplusplus
}
#endif

#endif /* __kd_ACR_secure_storage_h_ */
</synopsis>
  </sect1>
</article>


